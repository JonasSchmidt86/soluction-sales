<div id="layoutAuthentication_content">
    <main>
        <div class="card-body">

            <div class="row justify-content-center">
                <div class="">
                    <div class="card mt-3">
                        <% if @sale.errors.any? %>
                            <div class="alert alert-danger alert-dismissible " role="alert">
                                <% @sale.errors.full_messages.each do |message| %>
                                    <ul>
                                        <li><%= message %></li>
                                    </ul>
                                <% end %>
                            </div>
                        <% end %> 
                                            
                        <div class="card-header bg-primary" >
                            <h4 class="text-center font-weight-light">
                                <%= "#{action_message} Venda"%> 
                            </h4>
                        </div>
                        <div class="card-body">
                            <%= form_with(model: [ :collaborators_backoffice, @sale ], local: true) do |form| %>

                            <div class="row g-2 d-flex align-items-center">
                                <div class="col-md-9 ">
                                    <div class="form-floating mb-3 ">
                                        <%= form.collection_select(:cod_pessoa, Pessoa.all.order(:nome), 
                                                :cod_pessoa, :nome, {:prompt => 'Selecione uma Pessoa'}, 
                                                    class: "form-control border-top-0 border-start-0 border-end-0 border-dark") %>
                                        <%= form.label :pessoa, class:"" %>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="d-grid gap-2 d-md-block">
                                        <%= link_to collaborators_backoffice_report_sales_historic_path(:cod_pessoa), class:"btn btn-lg btn-info btn-circle btn-outline-dark" do %>
                                            <i class="fa fa-info"></i>
                                        <% end %>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-2">
                                <div class="col-md-5">
                                    <div class="form-floating mb-3 mb-md-0">
                                        <%= form.text_field :datavenda,value: post_date(DateTime.now), class: "fallback form-control border-top-0 border-start-0 border-end-0 border-dark datepicker" %>
                                        <%= form.label :data_venda, class:"" %>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-floating mb-3">
                                        <%= form.text_field :numeronf, class: "form-control border-top-0 border-start-0 border-end-0 border-dark" %>
                                        <%= form.label :numero_nf, class:"" %>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-md-3">
                                    <div class="form-floating mb-3 mb-md-0">
                                        <%= form.text_field :acrescimo, input_html: { inputmode: "numeric", pattern: "[0-9]*" }, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", onchange: "setTotalVenda()" %>
                                        <%= form.label :acrescimo, class:"" %>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-floating mb-3">
                                        <%= form.text_field :desconto, input_html: { inputmode: "numeric", pattern: "[0-9]*" }, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", onchange: "setTotalVenda()" %>
                                        <%= form.label :desconto, class:"" %>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-floating mb-3">
                                        <%= form.text_field :valortotal, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", readonly: true %>
                                        <%= form.label :valortotal, class:"" %>
                                    </div>
                                </div>
                            </div>

                            <!-- Tab panes -->
                            <!-- Nav tabs -->
                            <ul class="nav mt-2 nav-tabs" id="myTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="product-tab" data-bs-toggle="tab" data-bs-target="#product" type="button" role="tab" aria-controls="product" aria-selected="true">Produtos</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="bills-tab" data-bs-toggle="tab" data-bs-target="#bills" type="button" role="tab" aria-controls="bills" aria-selected="false">Contas</button>
                                </li>
                            </ul>

                            <div class="tab-content">
                            
                                <div class="tab-pane active" id="product" role="tabpanel" aria-labelledby="product-tab" tabindex="0">
                                    <div class="card-body">

                                        <div class="table-responsive">

                                            <table id="tblProdutos" class="table table-sm align-middle table-light table-striped table-hover table-borderless">
                                                <thead>
                                                    <tr>
                                                        <th style="width: 8%;">Cod</th>
                                                        <th>Nome</th>
                                                        <th style="">Cor</th>
                                                        <th style="width: 7%;">Qtd</th>
                                                        <th style="width: 10%;">valor</th>
                                                        <th style="width: 10%;">Total</th>
                                                        <%# <th style="width: 3%;"></th> %>
                                                    </tr>
                                                </thead>
                                                <tbody class='sales' id="item_field">
                                                    <%= form.fields_for :itensvenda do |itens| %>
                                                        <%= render partial: "itensvenda_fields", 
                                                            locals: { f: itens } %>    
                                                    <% end %>
                                                </tbody>
                                            </table>
                                            <div class="form-actions">
                                                <%= link_to_add_association 'Adiciona Item', form, :itensvenda, 
                                                    class: 'btn btn-primary', data: { association_insertion_node: '.sales', association_insertion_method: :append } %>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane" id="bills" role="tabpanel" aria-labelledby="bills-tab" tabindex="0">
                                    <div class="card-body">
                                        <div class="form-floating input-group mb-3">                
                                            <%# link_to_add_association 'Calcular', form, :contas, 
                                                partial: 'collaborators_backoffice/venda/shared/contas_fields', class: "btn input-group-text btn-success" %>
                                        </div>

                                        <div class="row mb-2">
                                            <div class="col-md-2">
                                                <div class="form-floating mb-3 mb-md-0">
                                                    <%= form.text_field :nmParcela, value: 1, type: "number", step: "1", class: "form-control border-top-0 border-start-0 border-end-0 border-dark"%>
                                                    <%= form.label :parcelas, class:"" %>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-floating mb-3">
                                                    <%= form.text_field :first_date, value: post_date(DateTime.now), class: "fallback datepicker form-control border-top-0 border-start-0 border-end-0 border-dark"%>
                                                    <%= form.label :data_pagto, class:"" %>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-floating mb-3">
                                                    <%= form.text_field :interval, value: 30, type: "number", step: "1", class: "form-control border-top-0 border-start-0 border-end-0 border-dark" %>
                                                    <%= form.label :dias, class:"" %>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-floating mb-3">
                                                    <a href="#" onclick="createBills()" class="btn btn-success">Calcular Parcelas</a>
                                                </div>
                                            </div>
                                        </div>
                                        <table id="tblContas" class="bills table table-sm align-middle table-light table-striped table-hover table-borderless">
                                            <thead>
                                                <tr>
                                                    <th class="">Numero</th>
                                                    <th class="">Dt Vencimento</th>
                                                    <th class="">valor Parcela</th>
                                                    <th style="width: 3%;"></th>
                                                </tr>
                                            </thead>

                                            <tbody id = 'conta_field' class = "contas">
                                                <%= form.fields_for :contas do |bill| %>
                                                    <%= render partial: "conta_fields", 
                                                            locals: { f: bill } %> 
                                                <% end %>
                                            </tbody>
                                        </table> 

                                        <div class="form-actions">
                                            <%= link_to_add_association 'Adiciona Conta', form, :contas, id:"conta", hidden: true,
                                                class: 'btn btn-primary bills', display: "none", data: { association_insertion_node: '.contas', association_insertion_method: :append } %>
                                        </div>

                                    </div>
                                </div>

                                <div class="form-floating mb-3 md-3 mt-0">  
                                    <button type="submit" class="btn input-group-text btn-success">Salvar</button>
                                </div>
                        <% end %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<%= render partial: 'collaborators_backoffice/vendas/shared/cores_modal' %>
<%= render partial: 'layouts/shared/modal_alert' %>

<script>

// pegar o campo de quantidade de parcelas, e o campo valor total da venda

let data = []; // Array para armazenar os objetos

function createBills() {

    const nBills = parseInt(document.getElementById('venda_nmParcela').value);
    const firstDate = document.getElementById('venda_first_date').value;
    const interval = parseInt(document.getElementById('venda_interval').value);
    const totalSale = parseFloat(document.getElementById('venda_valortotal').value);
    
    // Extrair dia, mês e ano
    let partes = firstDate.split('/');
    let dia = partes[0];
    let mes = partes[1] - 1; // Os meses em JavaScript começam do zero
    let ano = partes[2];

    // Criar o objeto Date
    let billDate = new Date(ano, mes, dia);

    const billAmount = totalSale / nBills;

    // Limpa a tabela antes de adicionar novas linhas
    $('.contas').empty();

    for (let i = 0; i < nBills; i++) {
        console.log(formatDate(billDate));

        const bill = {
            number: i + 1,
            dueDate: new Date(billDate), // Cria uma nova instância para evitar referências compartilhadas
            amount: billAmount
        };

        data.push(bill);
        billDate.setDate(billDate.getDate() + interval);
    }

    data.forEach((bill, index) => {
        // Cria um novo item do nested_field usando a função de adição fornecida pelo gem 'cocoon'
        let newItem = $('#conta').data('association-insertion-template');

        // Substitui os placeholders no conteúdo clonado com os dados do objeto bill
        newItem = newItem.replace(/new_contas/g, index);
        newItem = newItem.replace(/new_contas/g, `contas_attributes][${index}][numeroparcela`);
        newItem = newItem.replace(/new_contas/g, `contas_attributes][${index}][dtvencimento`);
        newItem = newItem.replace(/new_contas/g, `contas_attributes][${index}][valorparcela`);

        // Adiciona a nova linha à tabela
        $('.contas').append(newItem);

        // Preenche os campos do novo item com os dados da fatura
        var nmParc = document.getElementById(`venda_contas_attributes_${index}_numeroparcela`);
        var dtVenc = document.getElementById(`venda_contas_attributes_${index}_dtvencimento`);
        var vlParc = document.getElementById(`venda_contas_attributes_${index}_valorparcela`);

        // Verifica se os campos existem antes de definir seus valores
        if (nmParc && dtVenc && vlParc) {
            nmParc.value = bill.number;
            dtVenc.value = formatDate(bill.dueDate);
            vlParc.value = parseFloat(bill.amount).toFixed(2).replace('.', ',');
        } else {
            console.error(`Elementos para a fatura ${index} não foram encontrados.`);
        }
    });

    data = [];
}

// Função para formatar a data no formato 'dd/mm/yyyy'
function formatDate(date) {
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = date.getFullYear();
    return `${day}/${month}/${year}`;
}



// -----------------------------------------------------------------
// ------------ para baixo da tabela Produto -----------------------
// -----------------------------------------------------------------
    function selectProduto(event, field) {
        console.log(field.value);
        if (event.key === 'Enter' || event.keyCode === 13) {
            // Chame a função que você deseja executar
            atualizarCommentIndex(field);
        }
    };

    function thisIndex(field) {
        var name = field.name;
        var regex = /\[(\d+)\]/;
        var matches = name.match(regex);

        if (matches && matches.length > 1) {
            return parseInt(matches[1], 10);
        } else {
            return null;
        }
    }

    function atualizarCommentIndex(inputField) {
        if (inputField.value !== null && inputField.value.trim() !== '') {
            
            inputField.value = inputField.value.replace(/\s/g, '');
            var index = thisIndex(inputField);

            if ( index != null ) {
                var selector = "";

                if (inputField.type == "text"){
                    selector = `venda_itensvenda_attributes_${index}_produto`;
                }else {
                    selector = `venda_itensvenda_attributes_${index}_cod_produto`
                }
                
                var commentField = document.getElementById(selector);
                
                if ( commentField ){
                    commentField.value = inputField.value;
                }
                console.log("AQUI");
                selectColorProduct(inputField)
            }
        }
    };

    function selectColorProduct(field) {
        field.value = field.value.replace(/\s/g, '');

        var index = thisIndex(field);

        var corSelect = document.getElementById(`venda_itensvenda_attributes_${index}_cod_cor`);
        var proValor = document.getElementById(`venda_itensvenda_attributes_${index}_valorunitario`);
        var proQtd = document.getElementById(`venda_itensvenda_attributes_${index}_quantidade`);

        // Não use const ou let aqui
        const isLocalhost = () => {
        // Verifica se o host inclui "localhost" ou "127.0.0.1"
        return (
            window.location.hostname === 'localhost' ||
            window.location.hostname === '127.0.0.1'
        );
        };

        let apiUrl = ""; // Atribuição inicial, mas não precisa ser const ou let

        // Exemplo de uso
        if (isLocalhost()) {
        apiUrl = 'http://localhost:3000/collaborators_backoffice/vendas/consulta_estoque';
        } else {
        apiUrl = 'https://mrstore-09d04ec9e74b.herokuapp.com/collaborators_backoffice/vendas/consulta_estoque';
        }

        console.log(apiUrl);


        fetch(apiUrl, {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id_produto: field.value }) // Converte os dados em JSON
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Erro ao enviar dados para a API');
            }
            return response.json();
        })
        .then(data => {
            var x = document.getElementById("cor_id");
            x.innerHTML = "";

            var option = document.createElement("option");
            option.text = "Selecione uma Cor!";
            x.add(option)

            if ( data.length === 0 ){
                corSelect.value = 1; // 1 é a cor padrão 
            } else if(data.length === 1 ){
                corSelect.value = data[0].cod_cor;
            } else if (data.length > 0) {
                data.forEach(cor => {
                    var option = document.createElement("option");
                    option.text = [cor.nmcor, cor.quantidade.replace('.0','')].join(' - ');
                    option.value = cor.cod_cor;
                    option.setAttribute("data-valor-attribute", cor.valorvenda);
                    option.setAttribute("data-quantidade-attribute", cor.quantidade);
                    x.add(option);
                });
                abrirModal();
            }
        })
        .catch(error => {
            console.error('Ocorreu um erro:', error);
        });


        const selectCor = document.querySelector("#cor_id");
        selectCor.addEventListener("change", (event) => {
            var element = document.getElementById('cor_id');
            
            var valor;
            var quantidade;
            
            for (var i = 0; i < element.options.length; i++) {
                if (element.options[i].value === element.value) {
                    // Defina a opção como selecionada
                    valor = element.options[i].getAttribute("data-valor-attribute");
                    quantidade = element.options[i].getAttribute("data-quantidade-attribute");

                    if (quantidade <= 0){
                        //alert("Quantidade insuficiente para venda!");
                        alertModal("Possui " + parseFloat(quantidade).toFixed(0) + " no estoque. Quantidade insuficiente.");
                    }
                    
                    corSelect.value = element.value;
                    proValor.value = parseFloat(valor).toFixed(2).replace(".",",");
                    proQtd.value = '1';//parseFloat(1).toFixed(0);
                    setValorTotal(field);

                    break;
                }
            }
            $('#coresModal').modal('hide');
            corSelect = "";
            proValor = "";
            proQtd = "";
        });
    }
    
// ------------- calculas os valores da tela ---------------

    function setValorTotal(field) {
        var index = thisIndex(field);
        var proValor = document.getElementById(`venda_itensvenda_attributes_${index}_valorunitario`);
        var proQtd   = document.getElementById(`venda_itensvenda_attributes_${index}_quantidade`);
        var proTotal = document.getElementById(`venda_itensvenda_attributes_${index}_valor_total`);
        var venTotal = document.getElementById("valor_total");

        let valUnit = parseFloat(proValor.value) * 100;

console.log("PRODUTO = "+valUnit);
        //var ttProd = (parseFloat( proValor.value ) * parseFloat(proQtd.value)).toFixed(2);

        proTotal.value = ((parseFloat( valUnit) * parseFloat(proQtd.value)) / 100 );
        proTotal.value = parseFloat(proTotal.value).toFixed(2).replace(".",",");

        setTotalVenda();
        proValor = "";
        proQtd   = "";
        proTotal = "";
        venTotal = "";

    }

    function setTotalVenda(){
        // Selecione a tabela
        var tabela = document.getElementById("tblProdutos");
        var acrescimo = document.getElementById("venda_acrescimo").value;
        var desconto = document.getElementById("venda_desconto").value;

        // Inicialize a variável para armazenar a soma
        var soma = 0;

        // Percorra as linhas da tabela (comece de 1 para pular a primeira linha de cabeçalho)
        for (var i = 1; i < tabela.rows.length; i++) {
            // Obtenha o valor unitário da célula de classe "valor-unitario"
            var valorUnitarioCell = tabela.rows[i].querySelector(".valor-unitario");
            // Use uma expressão condicional para verificar se o valor é válido
            var valorUnitario = valorUnitarioCell.value? parseFloat(valorUnitarioCell.value) : 0;
            
            //console.log("TEXTO - "+valorUnitario)

            var qtdCell = tabela.rows[i].querySelector(".quantidade");
            var qtdProduto = qtdCell.value ? parseFloat(qtdCell.value) : 0;
            
            // Some o valor unitário à variável de soma
            soma += (valorUnitario*qtdProduto);
        }
        soma += parseFloat(acrescimo) - parseFloat(desconto);
        document.getElementById("venda_valortotal").value = soma.toFixed(2).replace(".",",");
        // Exiba o resultado da soma
    }

    function abrirModal() {
        var modal = document.getElementById('coresModal');
        $(modal).modal('show'); // Abre o modal usando jQuery (Bootstrap requer jQuery para operações com modais)
        $(modal).on('shown.bs.modal', function () {
            $('#cor_id').focus(); // Define o foco no select
        });
    }
</script>


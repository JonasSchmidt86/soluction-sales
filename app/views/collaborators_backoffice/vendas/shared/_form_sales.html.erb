<div id="layoutAuthentication_content">
    <main>
        <div class="card-body">
            <div class="row justify-content-center">
                <div class="">
                    <div class="card mt-3">
                        <% if @sale.errors.any? %>
                            <div class="alert alert-danger alert-dismissible " role="alert">
                                <% @sale.errors.full_messages.each do |message| %>
                                    <ul>
                                        <li><%= message %></li>
                   Â¥                 </ul>
                                <% end %>
                                <% @sale.errors.clear %>
                                <% @sale.pessoa.errors.clear %>
                            </div>
                        <% end %> 
                                            
                        <div class="card-header bg-primary" >
                            <h4 class="text-center font-weight-light">
                                <%= "#{action_message} Venda"%> 
                            </h4>
                        </div>
                        
                        <div class="card-body">

                            <%= form_with(model: [ :collaborators_backoffice, @sale ], local: true) do |sale| %>
                            
                            <div class="col-md-12">
                                <div class="row my-2 mx-2 align-items-center">
                                    <div class="col-md-9">
                                        <div class="form-floating">
                                            <%= sale.text_field :nome_pessoa, class: "border-top-0 border-start-0 border-end-0 border-dark form-control text", placeholder:"Digite para buscar" %>
                                            <%= sale.label :pessoa_nome, class:"" %>
                                                <div id="results_list" class="position-absolute bg-light form-control-lg p-2 mt-2" style="display: none; z-index: 100; width: 100%;"></div>
                                            <%= sale.hidden_field :cod_pessoa, id: 'selected_person_id' %>
                                        </div>
                                    </div>

                                    <div class="col-md-2">         
                                        <div class="form-floating">         
                                                              
                                            <%= link_to collaborators_backoffice_report_sales_client_path(:cod_pessoa), id: "client_link", class:"btn btn-lg btn-info btn-circle" do %>
                                                <i class="fa-brands fa-hire-a-helper"></i>
                                            <% end %>
                                            <%= render partial: 'collaborators_backoffice/vendas/shared/pessoa_modal',
                                                locals: { form: sale } %>
                                                
                                        </div>
                                    </div>
                                    
                                </div>


                                <div class="row my-2 mx-2 align-items-center">
                                    <div class="col-md-2">
                                        <div class="form-floating">
                                            <%= sale.text_field :datavenda,value: post_date(DateTime.now), class: "fallback form-control border-top-0 border-start-0 border-end-0 border-dark datepicker" %>
                                            <%= sale.label :data_venda, class:"" %>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-floating">
                                            <%= sale.text_field :numeronf, class: "form-control border-top-0 border-start-0 border-end-0 border-dark" %>
                                            <%= sale.label :numero_nf, class:"" %>
                                        </div>
                                    </div>
                                </div>

                                <div class="row my-2 mx-2">
                                    <div class="col-md-2">
                                        <div class="form-floating">
                                            <%= sale.text_field :acrescimo, input_html: { inputmode: "numeric", pattern: "[0-9]*" }, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", onchange: "setTotalVenda()" %>
                                            <%= sale.label :acrescimo, class:"" %>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-floating mb-3">
                                            <%= sale.text_field :desconto, input_html: { inputmode: "numeric", pattern: "[0-9]*" }, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", onchange: "setTotalVenda()" %>
                                            <%= sale.label :desconto, class:"" %>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-floating mb-3">
                                            <%= sale.text_field :valortotal, class: "money2 form-control border-top-0 border-start-0 border-end-0 border-dark", readonly: true %>
                                            <%= sale.label :valortotal, class:"" %>
                                        </div>
                                    </div>
                                </div>

                                <!-- Tab panes -->
                                <!-- Nav tabs -->
                                <ul class="nav mt-1 mx-3 nav-tabs" id="myTab" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link active" id="product-tab" data-bs-toggle="tab" data-bs-target="#product" type="button" role="tab" aria-controls="product" aria-selected="true">Produtos</button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link" id="bills-tab" data-bs-toggle="tab" data-bs-target="#bills" type="button" role="tab" aria-controls="bills" aria-selected="false">Contas</button>
                                    </li>
                                </ul>

                                <div class="tab-content">        
                                    <div class="tab-pane active" id="product" role="tabpanel" aria-labelledby="product-tab" tabindex="0">
                                        <div class="card-body">

                                            <div class="table-responsive">
                                                <table id="tblProdutos" class="table table-sm align-middle table-light table-striped table-hover table-borderless">
                                                    <thead>
                                                        <tr>
                                                            <th style="width: 50%;">Nome</th>
                                                            <th style="">Cor</th>
                                                            <th style="width: 7%;">Qtd</th>
                                                            <th style="width: 10%;">valor</th>
                                                            <th style="width: 10%;">Total</th>
                                                            <%# <th style="width: 3%;"></th> %>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="itensvenda_fields" class='itens' >
                                                        <%= sale.fields_for :itensvenda do |item| %>
                                                            <%= render partial: "itensvenda_fields", locals: { f: item } %>   
                                                        <% end %>
                                                    </tbody>
                                                </table>
                                                <div class="form-actions">
                                                    <%= link_to_add_association 'Adiciona Item', sale, :itensvenda, 
                                                            force_non_association_create: true,
                                                            class: 'btn btn-primary', 
                                                             data: { association_insertion_node: '.itens', 
                                                                     association_insertion_method: :append} %> <%# append para adicionar no fim da lista prepend para adicionar no inicio da lista%>
                                                </div>
                                            </div>

                                        </div>
                                    </div>

                                    <div class="tab-pane" id="bills" role="tabpanel" aria-labelledby="bills-tab" tabindex="0">
                                        <div class="card-body">

                                            <div class="row mb-2">
                                                <div class="col-md-2">
                                                    <div class="form-floating mb-3 mb-md-0">
                                                        <%= sale.text_field :nmParcela, value: 1, type: "number", step: "1", class: "form-control border-top-0 border-start-0 border-end-0 border-dark"%>
                                                        <%= sale.label :parcelas, class:"" %>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-floating mb-3">
                                                        <%= sale.text_field :first_date, value: post_date(DateTime.now), class: "fallback datepicker form-control border-top-0 border-start-0 border-end-0 border-dark"%>
                                                        <%= sale.label :data_pagto, class:"" %>
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <div class="form-floating mb-3">
                                                        <%= sale.text_field :interval, value: 30, type: "number", step: "1", class: "form-control border-top-0 border-start-0 border-end-0 border-dark" %>
                                                        <%= sale.label :dias, class:"" %>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-floating mb-3">
                                                        <a href="#" onclick="createBills()" class="btn btn-success">Calcular Parcelas</a>
                                                    </div>
                                                </div>
                                            </div>

                                            <table id="tblContas" class="bills table table-sm align-middle table-light table-striped table-hover table-borderless">
                                                <thead>
                                                    <tr>
                                                        <th class="">Numero</th>
                                                        <th class="">Dt Vencimento</th>
                                                        <th class="">valor Parcela</th>
                                                        <th style="width: 3%;"></th>
                                                    </tr>
                                                </thead>
                                                <tbody id = 'conta_fields' class = "contas">
                                                    <%= sale.fields_for :contas do |bill| %>
                                                        <%= render partial: "conta_fields", locals: { f: bill } %> 
                                                    <% end %>
                                                </tbody>
                                            </table> 

                                            <div class="form-actions">
                                                <%= link_to_add_association 'Adiciona Conta', sale, :contas, 
                                                        force_non_association_create: true, id:"addConta",
                                                        class: 'btn btn-primary', 
                                                         data: { association_insertion_node: '.contas',
                                                                 association_insertion_method: :append } %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="position-fixed bottom-0 end-0 m-4">
                                <div class="d-block my-3 mx-3">
                                    <button id="saveButton" type="submit" class="btn btn-success rounded-circle p-3">
                                        <i class="fa fa-check fa-2x"></i>
                                    </button>
                                </div>
                            </div>  
                            <% end %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>


<%= render partial: 'collaborators_backoffice/vendas/shared/cores_modal' %>
<%= render partial: 'layouts/shared/modal_alert' %>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
// ---------------------------------

    document.addEventListener("keypress", function () { 
        //console.log("-- "+event.key); // se eu clicar 'p' vai me retornar 'p' ao contrÃ¡rio do keycode que retorna o cÃ³digo da tecla
        if(event.keyCode == 13){ // 13 Ã© o Enter
            event.preventDefault();
        }
    });

// -----------------------------------------------------------------
// ------------ para baixo da tabela contas  -----------------------
// -----------------------------------------------------------------

function createBills() {
    let data = []; // Array para armazenar os objetos de parcelas

    const nBills = parseInt(document.getElementById('venda_nmParcela').value);
    const firstDate = document.getElementById('venda_first_date').value;
    const interval = parseInt(document.getElementById('venda_interval').value);
    const totalSale = parseFloat(document.getElementById('venda_valortotal').value.replace(",", "."));

    // ValidaÃ§Ã£o dos campos de entrada
    if (isNaN(nBills) || nBills <= 0) {
        console.error('NÃºmero de parcelas invÃ¡lido.');
        return;
    }

    if (!firstDate.match(/^\d{2}\/\d{2}\/\d{4}$/)) {
        console.error('Data inicial invÃ¡lida.');
        return;
    }

    if (isNaN(interval) || interval <= 0) {
        console.error('Intervalo invÃ¡lido.');
        return;
    }

    if (isNaN(totalSale) || totalSale <= 0) {
        console.error('Valor total da venda invÃ¡lido.');
        return;
    }

    // Extrair dia, mÃªs e ano
    let partes = firstDate.split('/');
    let dia = partes[0];
    let mes = partes[1] - 1; // Os meses em JavaScript comeÃ§am do zero
    let ano = partes[2];

    // Criar o objeto Date
    let billDate = new Date(ano, mes, dia);

    const billAmount = totalSale / nBills;

    // Limpa a tabela antes de adicionar novas linhas
    $('#conta_fields').empty();

    for (let i = 0; i < nBills; i++) {
        // Cria uma cÃ³pia da data de vencimento
        const bill = {
            number: i + 1,
            dueDate: new Date(billDate), // Cria uma nova instÃ¢ncia para evitar referÃªncias compartilhadas
            amount: billAmount
        };

        data.push(bill);
        billDate.setDate(billDate.getDate() + interval);
    }

    data.forEach((bill, index) => {
        // Adiciona um novo campo para cada conta
        $('#addConta').trigger('click');

        // Atualiza os campos recÃ©m-adicionados com os dados da fatura
        const row = $('#conta_fields tr').eq(index); // Seleciona a linha recÃ©m-adicionada
        row.find('input[id*=_numeroparcela]').val(bill.number);
        row.find('input[id*=_dtvencimento]').val(formatDate(bill.dueDate));
        row.find('input[id*=_valorparcela]').val(parseFloat(bill.amount).toFixed(2).replace('.', ','));

        // Preenche os campos ocultos
        row.find('input[id*=_cod_empresa]').val(<%= current_collaborator.empresa.id %>);
        row.find('input[id*=_ativo]').val(true);
        row.find('input[id*=_quitada]').val(false);
        row.find('input[id*=_cod_tppagamento]').val(1);
    });
}

// FunÃ§Ã£o para formatar a data no formato DD/MM/AAAA
function formatDate(date) {
    const day = ("0" + date.getDate()).slice(-2);
    const month = ("0" + (date.getMonth() + 1)).slice(-2);
    const year = date.getFullYear();
    return `${day}/${month}/${year}`;
}

    // FunÃ§Ã£o para formatar a data no formato 'dd/mm/yyyy'
    function formatDate(date) {
        const day = date.getDate().toString().padStart(2, '0');
        const month = (date.getMonth() + 1).toString().padStart(2, '0');
        const year = date.getFullYear();
        return `${day}/${month}/${year}`;
    }

    function thisIndex(field) {
        var name = field.name;
        var regex = /\[(\d+)\]/;
        var matches = name.match(regex);

        if (matches && matches.length > 1) {
            return parseInt(matches[1], 10);
        } else {
            return null;
        }
    }

    const isLocalhost = () => {
        return (
            window.location.hostname === 'localhost' ||
            window.location.hostname === '127.0.0.1'
        );
    };

    let url = "";

    if (isLocalhost()) {
        url = 'http://localhost:3000/collaborators_backoffice/';
    } else {
        // url = 'https://mrstore-09d04ec9e74b.herokuapp.com/collaborators_backoffice/';
        url = 'https://www.moveisrosa.shop/collaborators_backoffice/';
    }
    
    function abrirModal() {
        var modal = document.getElementById('coresModal');
        $(modal).modal('show'); // Abre o modal usando jQuery (Bootstrap requer jQuery para operaÃ§Ãµes com modais)
        $(modal).on('shown.bs.modal', function () {
            $('#cor_id').focus(); // Define o foco no select
        });
    }

    $(document).ready(function() {
        var categorySearch = $('#venda_nome_pessoa'); //document.getElementById('venda_pessoa'); // 
        var resultsList = $('#results_list');    // cria a lista de pessoas abaixo do input
        var selectedPersonIdField = $('#selected_person_id'); // insere o codigo da pessoa no campo hiden

        var selectedPersonCpfCnpjField = $('#venda_pessoa_attributes_cpf_cnpj');
        
        var link = $('#client_link');
        var originalHref = link.data('original-href');
        
        let apiUrl = url+ "buscas/buscar_pessoas";

        // Adiciona um evento de keypress para a tecla Enter
        categorySearch.on('keydown', function(event) {
           // console.log(event.key);
            if (event.key === 'Enter') {
                filterOptions();
            } else if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {
                // CÃ³digo 27 corresponde Ã  tecla "ESC"
                categorySearch.val(''); // Limpa o campo de busca
                selectedPersonIdField.val("");
                selectedPersonCpfCnpjField.val("");
                resultsList.empty().hide();
                link.attr('href', originalHref);
            }
        });
        
        // Adiciona um evento de clique aos itens da lista
        resultsList.on('click', 'div.list-group-item', function() {
            var selectedPerson = $(this).text();
            var selectedPersonId = $(this).data('cod_pessoa');
            
            // Preenche o campo escondido com o ID da pessoa selecionada
            selectedPersonIdField.val(selectedPersonId);
            selectedPersonCpfCnpjField.val($(this).data('cpf_cnpj'));
            
            buscarPessoaPorCpfCnpj(selectedPersonCpfCnpjField)

            // Atualiza o campo de busca com o nome da pessoa selecionada
            categorySearch.val(selectedPerson);

            // Limpa a lista de resultados
            resultsList.empty().hide();

            // Atualiza o link
            if (!originalHref) {
                originalHref = link.attr('href');
                link.data('original-href', originalHref);
            }
            var newHref = originalHref.replace('cod_pessoa', selectedPersonId);
            link.attr('href', newHref);
        });

        function filterOptions() {
            var query = categorySearch.val().trim().toLowerCase();
            resultsList.empty();

            $.ajax({
                url: apiUrl,
                method: 'GET',
                data: { entidade: 'Pessoa', query: query },
                success: function(data) {
                    data.forEach(function(person) {
                        var listItem = $('<div>').text(person.nome);
                        listItem.addClass('list-group-item');
                        listItem.data('cod_pessoa', person.cod_pessoa); // Armazena o ID da pessoa nos dados do item
                        listItem.data('cpf_cnpj',   person.cpf_cnpj); 
                        resultsList.append(listItem);
                        //console.log(person.email);
                        var data = person;
                    });

                    // Exibe a lista de resultados
                    resultsList.show();
                },
                error: function(err) {
                    console.error('Erro na requisiÃ§Ã£o AJAX:', err);
                }
            });
        }
    });

// -----------------------------------------------------------------
// ------------ para baixo da tabela Produto -----------------------
// -----------------------------------------------------------------

    function atualizarCommentIndex(inputField) {
        if (inputField.value !== null && inputField.value.trim() !== '') {
            
            inputField.value = inputField.value.replace(/\s/g, '');
            var index = thisIndex(inputField);

            if ( index != null ) {
                var selector = "";

                if (inputField.type == "text"){
                    //selector = `venda_itensvenda_attributes_${index}_produto`;
                }else {
                    selector = `venda_itensvenda_attributes_${index}_cod_produto`
                    selector = `venda_itensvenda_attributes_${index}_cod_produto`
                }
                
                var commentField = document.getElementById(selector);
                
                if ( commentField ){
                    commentField.value = inputField.value;
                }
                selectColorProduct(inputField)
                inputField = "";
            }
        }
    };
    
    function selectColorProduct(field) {
        field.value = field.value.replace(/\s/g, '');

        var index = thisIndex(field);
        let corSelect = document.getElementById(`venda_itensvenda_attributes_${index}_cod_cor`);
        var proValor = document.getElementById(`venda_itensvenda_attributes_${index}_valorunitario`);
        var proQtd = document.getElementById(`venda_itensvenda_attributes_${index}_quantidade`);

// coloco a cor no index pq caso esteja trocando o item ele precisa estar no index 
        if (corSelect){
            corSelect.selectedIndex = 0;
        }

        let apiUrl = url + 'vendas/consulta_estoque';

        fetch(apiUrl, {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id_produto: field.value }) // Converte os dados em JSON
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Erro ao enviar dados para a API');
            }
            return response.json();
        })
        .then(data => {
            var x = document.getElementById("cor_id");
            x.innerHTML = "";

            var option = document.createElement("option");
            option.text = "Selecione uma Cor!";
            option.value = 0;
            x.add(option)

            if ( data.length === 0 ){
                corSelect.value = 1; // 1 Ã© a cor padrÃ£o 
            
            //
            //} else if(data.length === 1 ){
            //    corSelect.value = data[0].cod_cor;
            //

            } else if (data.length > 0) {
                data.forEach(cor => {
                    var option = document.createElement("option");
                    option.text = [cor.nmcor, cor.quantidade.replace('.0','')].join(' - ');
                    option.value = cor.cod_cor;
                    option.setAttribute("data-valor-attribute", cor.valorvenda);
                    option.setAttribute("data-quantidade-attribute", cor.quantidade);
                    x.add(option);
                });
                abrirModal();
            }
        })
        .catch(error => {
            console.error('Ocorreu um erro:', error);
        });

// --------------------------- SELECIONA COR NO MODAL ---------------------- //
        var selectCor = document.querySelector("#cor_id");
// passa todos os campos cor
        selectCor.addEventListener("change", (event) => {

            let element = document.getElementById('cor_id');
            let valor;
            let quantidade;
            
            for (var i = 0; i < element.options.length; i++) {

                if (corSelect.value === null || corSelect.value === undefined || corSelect.value === ''){
                    
                    if (element.options[i].value === element.value) {
                        
                        if (index == thisIndex(corSelect)) {
                            // Defina a opÃ§Ã£o como selecionada
                            valor = element.options[i].getAttribute(`data-valor-attribute`);
                            quantidade = element.options[i].getAttribute(`data-quantidade-attribute`);

                            if (quantidade <= 0){
                                //alert("Quantidade insuficiente para venda!");
                                alertModal("Possui " + parseFloat(quantidade).toFixed(0) + " no estoque. Quantidade insuficiente.");
                            }
                            corSelect.value = element.value;
                            proValor.value = parseFloat(valor).toFixed(2).replace(".",",");
                            proQtd.value = '1';//parseFloat(1).toFixed(0);
                            setValorTotal(field);
                            break;
                        }
                    }
                    $('#coresModal').modal('hide');
                }
            }   
        });

    }
// --------------------------- FIM COR ---------------------- //

// ------------- calculas os valores da tela ---------------

    function setValorTotal(field) {
        let index = thisIndex(field);
        let proValor = document.getElementById(`venda_itensvenda_attributes_${index}_valorunitario`);
        let proQtd   = document.getElementById(`venda_itensvenda_attributes_${index}_quantidade`);
        let proTotal = document.getElementById(`venda_itensvenda_attributes_${index}_valor_total`);
        let venTotal = document.getElementById("valor_total");

        let valUnit = parseFloat(proValor.value.replace(",",".")) * 100;

//console.log("PRODUTO = "+valUnit);
        //var ttProd = (parseFloat( proValor.value ) * parseFloat(proQtd.value)).toFixed(2);

        proTotal.value = ((parseFloat( valUnit) * parseFloat(proQtd.value.replace(",","."))) / 100 );
        proTotal.value = parseFloat(proTotal.value).toFixed(2).replace(".",",");

        setTotalVenda();
        proValor = "";
        proQtd   = "";
        proTotal = "";
        venTotal = "";
        index = "";
    }

    function setTotalVenda(){
        // Selecione a tabela
        var tabela = document.getElementById("tblProdutos");
        var acrescimo = document.getElementById("venda_acrescimo").value.replace(",",".");
        var desconto = document.getElementById("venda_desconto").value.replace(",",".");

        // Inicialize a variÃ¡vel para armazenar a soma
        var soma = 0;

        // Percorra as linhas da tabela (comece de 1 para pular a primeira linha de cabeÃ§alho)
        for (var i = 1; i < tabela.rows.length; i++) {
            // Obtenha o valor unitÃ¡rio da cÃ©lula de classe "valor-unitario"
            var valorUnitarioCell = tabela.rows[i].querySelector(".valor-unitario");
            // Use uma expressÃ£o condicional para verificar se o valor Ã© vÃ¡lido
            var valorUnitario = valorUnitarioCell.value? parseFloat(valorUnitarioCell.value.replace(",",".")) : 0;
            
            //console.log("TEXTO - "+valorUnitario)

            var qtdCell = tabela.rows[i].querySelector(".quantidade");
            var qtdProduto = qtdCell.value ? parseFloat(qtdCell.value.replace(",",".")) : 0;
            
            // Some o valor unitÃ¡rio Ã  variÃ¡vel de soma
            soma += (valorUnitario*qtdProduto);
        }

        soma += parseFloat(acrescimo) - parseFloat(desconto);
        document.getElementById("venda_valortotal").value = soma.toFixed(2).replace(".",",");
        // Exiba o resultado da soma
    }

    $(document).on('keydown', '.produto_search', function(event) {
        if (event.key === 'Enter') {
            selectProduct(this);
        } else if (event.key === 'Escape') {
            // Verifique se o elemento Ã© um input (por exemplo, <input>)
            if (this.tagName.toLowerCase() === 'input') {
                //this.value = "";
            } else {
                // Se for um elemento de texto (por exemplo, <div>)
                //this.innerText = "";
            }
        }
    });

    function selectProduct(field) {
        
        var index = thisIndex(field);

        // ObtÃ©m a referÃªncia da div pelo id atual
        var productsListDiv = document.getElementById("products_list");

        // Verifica se a div com id "products_list" existe
        if (productsListDiv) {
            // Define o novo id
            productsListDiv.id = `products_list_${index}`;
        }
        
        var selectedProductIdField = document.getElementById(`venda_itensvenda_attributes_${index}_cod_produto`);
        
        let productsList = $(`#products_list_${index}`);

        let apiUrl = url+ "buscas/buscar_produtos";

        productOptions();
        
        // Adiciona um evento de clique aos itens da lista
        productsList.on('click', `div.list-group-item`, function() {
            let selectedProduct = $(this).data('produto');
            let selectedProductId = $(this).data('cod_produto');
            selectedProductIdField.value = ( selectedProductId );
            field.value =  selectedProduct ;

//--------------------------------------------------------------------------------------------------------------------------
            atualizarCommentIndex(selectedProductIdField);
//--------------------------------------------------------------------------------------------------------------------------
            // Limpa a lista de resultados
            productsList.hide();

        });

        function productOptions() {
            var query = field.value.trim().toLowerCase();
            productsList.empty();
            
            //console.log("productOptions --- ")
            
            $.ajax({
                url: apiUrl,
                method: 'GET',
                data: { entidade: 'Produto', query: query },
                success: function(data) {
                    productsList.empty();
                    data.forEach(function(product) {
                        var listItem = $('<div>').text(product.produto);
                        listItem.addClass('list-group-item');
                        listItem.data('cod_produto', product.cod_produto); // Armazena o ID do produto nos dados do item
                        listItem.data('produto', product.produto); 
                        productsList.append(listItem);
                    });

                    // Exibe a lista de resultados
                    productsList.show();
                },
                error: function(err) {
                    console.error('Erro na requisiÃ§Ã£o AJAX:', err);
                }
            });
        }
    };
</script>